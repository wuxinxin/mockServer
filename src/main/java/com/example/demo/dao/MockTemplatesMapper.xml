<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.MockTemplatesMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.MockTemplates" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="method" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.domain.MockTemplates" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="method" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="data" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, method, url
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mock_templates
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByMethodAndUrl" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mock_templates
    where method = #{method} AND url = #{url}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mock_templates
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.MockTemplates" >
    insert into mock_templates (id, method, url, 
      data)
    values (#{id,jdbcType=BIGINT}, #{method,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.MockTemplates" >
    insert into mock_templates
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.MockTemplates" >
    update mock_templates
    <set >
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.domain.MockTemplates" >
    update mock_templates
    set method = #{method,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.MockTemplates" >
    update mock_templates
    set method = #{method,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>